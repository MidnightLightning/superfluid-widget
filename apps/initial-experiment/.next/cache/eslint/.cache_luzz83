[{"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/Link.tsx":"1","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/NullableObject.ts":"2","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/CircularProgressWithLabel.tsx":"3","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/ContractWriteButton.tsx":"4","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/ContractWriteHandler.tsx":"5","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/ProductForm.tsx":"6","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/ProductModal.tsx":"7","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/ProductProvider.tsx":"8","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/SelectNetwork.tsx":"9","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/SelectPaymentOption.tsx":"10","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/Subscribe.tsx":"11","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/SubscribeForm.tsx":"12","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/SubscribeModal.tsx":"13","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/SubscribeTransaction.tsx":"14","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/TimePeriod.ts":"15","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/commandMappers.ts":"16","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/commands.ts":"17","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/productTypes.ts":"18","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/createEmotionCache.ts":"19","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/defaultProduct.ts":"20","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/extractContractWrite.ts":"21","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/findOrThrow.ts":"22","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/generated.ts":"23","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/getOrThrow.ts":"24","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/networkDefinitions.ts":"25","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/pages/_app.tsx":"26","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/pages/_document.tsx":"27","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/pages/index.tsx":"28","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/superTokenABI.ts":"29","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/theme.ts":"30","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/tokenList.ts":"31","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/wagmi.ts":"32"},{"size":3102,"mtime":1683286863509,"results":"33","hashOfConfig":"34"},{"size":93,"mtime":1683286863509,"results":"35","hashOfConfig":"34"},{"size":915,"mtime":1683286863509,"results":"36","hashOfConfig":"34"},{"size":605,"mtime":1683286863509,"results":"37","hashOfConfig":"34"},{"size":1781,"mtime":1683286863509,"results":"38","hashOfConfig":"34"},{"size":2556,"mtime":1683286863509,"results":"39","hashOfConfig":"34"},{"size":974,"mtime":1683286863509,"results":"40","hashOfConfig":"34"},{"size":722,"mtime":1683286863510,"results":"41","hashOfConfig":"34"},{"size":756,"mtime":1683286863510,"results":"42","hashOfConfig":"34"},{"size":1198,"mtime":1683286863510,"results":"43","hashOfConfig":"34"},{"size":4463,"mtime":1683286863510,"results":"44","hashOfConfig":"34"},{"size":8969,"mtime":1683286863510,"results":"45","hashOfConfig":"34"},{"size":1104,"mtime":1683286863510,"results":"46","hashOfConfig":"34"},{"size":3715,"mtime":1683286863510,"results":"47","hashOfConfig":"34"},{"size":581,"mtime":1683286863510,"results":"48","hashOfConfig":"34"},{"size":3875,"mtime":1683286863510,"results":"49","hashOfConfig":"34"},{"size":777,"mtime":1683286863510,"results":"50","hashOfConfig":"34"},{"size":1299,"mtime":1683286863510,"results":"51","hashOfConfig":"34"},{"size":684,"mtime":1683286863510,"results":"52","hashOfConfig":"34"},{"size":36967,"mtime":1683286863510,"results":"53","hashOfConfig":"34"},{"size":746,"mtime":1683286863510,"results":"54","hashOfConfig":"34"},{"size":236,"mtime":1683286863510,"results":"55","hashOfConfig":"34"},{"size":420083,"mtime":1683286863511,"results":"56","hashOfConfig":"34"},{"size":205,"mtime":1683286863511,"results":"57","hashOfConfig":"34"},{"size":3076,"mtime":1683286863511,"results":"58","hashOfConfig":"34"},{"size":1866,"mtime":1683286863511,"results":"59","hashOfConfig":"34"},{"size":2801,"mtime":1683286863511,"results":"60","hashOfConfig":"34"},{"size":7164,"mtime":1683286863511,"results":"61","hashOfConfig":"34"},{"size":30506,"mtime":1683286863511,"results":"62","hashOfConfig":"34"},{"size":604,"mtime":1683286863512,"results":"63","hashOfConfig":"34"},{"size":98246,"mtime":1683286863512,"results":"64","hashOfConfig":"34"},{"size":819,"mtime":1683286863512,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jwkuzq",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/Link.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/NullableObject.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/CircularProgressWithLabel.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/ContractWriteButton.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/ContractWriteHandler.tsx",["164"],[],"import { PrepareWriteContractConfig } from \"@wagmi/core\";\nimport { useEffect } from \"react\";\nimport { Signer } from \"ethers\";\nimport {\n  useContractWrite,\n  usePrepareContractWrite,\n  useWaitForTransaction,\n} from \"wagmi\";\n\nexport type WagmiOverrides = PrepareWriteContractConfig[\"overrides\"];\n\nexport type ContractWriteResult = {\n  write?: () => void;\n  prepareStatus: \"error\" | \"success\" | \"loading\" | \"idle\";\n  writeStatus: \"error\" | \"success\" | \"loading\" | \"idle\";\n  transactionStatus: \"error\" | \"success\" | \"loading\" | \"idle\";\n  isLoading: boolean;\n  isFinished: boolean;\n};\n\ntype ContractWriteHandlerProps = {\n  enabled: boolean;\n  signer: Signer;\n  contractWrite: PrepareWriteContractConfig;\n  onChange: (result: ContractWriteResult) => void;\n  overrides?: WagmiOverrides;\n};\n\nexport default function ContractWriteHandler({\n  enabled,\n  signer,\n  contractWrite,\n  onChange,\n  overrides,\n}: ContractWriteHandlerProps) {\n  const {\n    config,\n    status: prepareStatus,\n    isLoading: isPrepareLoading,\n  } = usePrepareContractWrite({ ...contractWrite, signer, overrides });\n\n  const {\n    write,\n    data,\n    status: writeStatus,\n    isLoading: isWriteLoading,\n  } = useContractWrite(config as any); // TODO(KK): Any way to get rid of the any?\n\n  const { status: transactionStatus, isLoading: isTransactionLoading } =\n    useWaitForTransaction({\n      hash: data?.hash,\n    });\n\n  useEffect(() => {\n    onChange({\n      write,\n      prepareStatus,\n      writeStatus,\n      transactionStatus,\n      isLoading: isPrepareLoading || isWriteLoading || isTransactionLoading,\n      isFinished: transactionStatus === \"success\",\n    });\n  }, [\n    write,\n    prepareStatus,\n    writeStatus,\n    isPrepareLoading,\n    isWriteLoading,\n    isTransactionLoading,\n  ]);\n\n  return null;\n}\n","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/ProductForm.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/ProductModal.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/ProductProvider.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/SelectNetwork.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/SelectPaymentOption.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/Subscribe.tsx",["165","166"],[],"import { Box, Card, Stack, Typography, useTheme } from \"@mui/material\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { DevTool } from \"@hookform/devtools\";\nimport SubscribeForm from \"./SubscribeForm\";\nimport SubscribeTransaction from \"./SubscribeTransaction\";\nimport {\n  ProductInfo as ProductInfo,\n  addressSchema,\n  chainIdSchema,\n  etherAmountSchema,\n  paymentOptionSchema,\n} from \"./productTypes\";\nimport { z } from \"zod\";\nimport { Address, useAccount } from \"wagmi\";\nimport { parseEther } from \"ethers/lib/utils.js\";\nimport NullableObject from \"../NullableObject\";\nimport { Command } from \"./commands\";\nimport { TokenList, TokenInfo } from \"@uniswap/token-lists\";\n\nconst validFormSchema = z.object({\n  chainId: chainIdSchema,\n  accountAddress: addressSchema,\n  tokenOption: paymentOptionSchema,\n  wrapAmountEther: etherAmountSchema,\n  autoWrap: z.boolean(),\n  receiverAddress: addressSchema,\n});\n\nexport type ValidForm = z.infer<typeof validFormSchema>;\n\nexport type DraftForm = NullableObject<ValidForm>;\n\nexport type CheckoutSettings = {\n  productInfo: ProductInfo;\n  tokenList: TokenList;\n};\n\nexport const mapValidFormToCommands = (validForm: ValidForm): Command[] => {\n  const {\n    chainId,\n    tokenOption: { superToken: superToken },\n  } = validForm;\n\n  const commands: Command[] = [];\n\n  const wrapAmountWei = parseEther(validForm.wrapAmountEther ? validForm.wrapAmountEther : \"0\");\n  if (!wrapAmountWei.isZero() && superToken.underlyingTokenAddress) {\n    commands.push({\n      chainId,\n      title: \"Wrap\",\n      amountEther: validForm.wrapAmountEther, // TODO(KK): Decimals need to be accounted somewhere!\n      superTokenAddress: superToken.address,\n      underlyingTokenAddress: superToken.underlyingTokenAddress,\n    });\n  }\n\n  if (validForm.autoWrap && superToken.underlyingTokenAddress) {\n    commands.push({\n      chainId,\n      title: \"Auto-Wrap\" as const,\n      superTokenAddress: superToken.address,\n      underlyingTokenAddress: superToken.underlyingTokenAddress,\n    });\n  }\n\n  commands.push({\n    chainId,\n    title: \"Subscribe\",\n    senderAddress: validForm.accountAddress,\n    receiverAddress: validForm.receiverAddress,\n    superTokenAddress: superToken.address,\n    flowRate: validForm.tokenOption.flowRate,\n  });\n\n  return commands;\n} \n\nexport default function Subscribe({\n  productInfo,\n  tokenList,\n}: CheckoutSettings) {\n  const theme = useTheme();\n  const { address: accountAddress } = useAccount();\n\n  const formMethods = useForm<DraftForm, any, ValidForm>({\n    defaultValues: {\n      accountAddress: null,\n      tokenOption: null,\n      wrapAmountEther: \"\",\n      autoWrap: null,\n      receiverAddress: \"0xdf3d1C11752B35A5a3d984cC86E5A535745412Fe\",\n    },\n  });\n  const { control: c, setValue, handleSubmit } = formMethods;\n\n  useEffect(() => {\n    setValue(\"accountAddress\", accountAddress ?? null, {\n      shouldValidate: true,\n      shouldDirty: true,\n      shouldTouch: true,\n    });\n  }, [accountAddress]);\n\n  const [commands, setCommands] = useState<Command[]>([]); // TODO: Use \"form submitted\" from react-hook-form instead?\n\n  const onSubmit = useCallback(\n    handleSubmit((validForm) => {\n      const commands = mapValidFormToCommands(validForm);\n      setCommands(commands);\n    }),\n    [handleSubmit]\n  );\n\n  const tokenMap = useMemo(\n    () =>\n      Object.freeze(new Map<Address, TokenInfo>(tokenList.tokens.map((x) => [x.address as Address, x]))),\n    [tokenList]\n  );\n\n  return (\n    <Box p={3} width=\"640px\">\n      <Stack>\n        <Typography variant=\"h6\" gutterBottom>\n          Subscribe\n        </Typography>\n\n        <Box\n          component={Card}\n          variant=\"outlined\"\n          bgcolor={theme.palette.grey[200]}\n          p={1}\n        >\n          <Typography variant=\"body1\" fontWeight={600} gutterBottom>\n            {productInfo.name}\n          </Typography>\n          <Typography variant=\"body2\">{productInfo.description}</Typography>\n        </Box>\n\n        <FormProvider {...formMethods}>\n          {!!commands.length ? (\n            <SubscribeTransaction commands={commands} onBack={() => setCommands([])} />\n          ) : (\n            <SubscribeForm\n              productInfo={productInfo}\n              tokenMap={tokenMap}\n              onSubmit={onSubmit}\n            />\n          )}\n        </FormProvider>\n      </Stack>\n      <DevTool control={c} placement=\"bottom-left\" />\n    </Box>\n  );\n}\n","/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/SubscribeForm.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/SubscribeModal.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/SubscribeTransaction.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/TimePeriod.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/commandMappers.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/commands.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/components/productTypes.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/createEmotionCache.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/defaultProduct.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/extractContractWrite.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/findOrThrow.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/generated.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/getOrThrow.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/networkDefinitions.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/pages/_app.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/pages/_document.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/pages/index.tsx",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/superTokenABI.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/theme.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/tokenList.ts",[],[],"/Users/tokdaniel/Workspace/superfluid/superfluid-checkout/apps/initial-experiment/src/wagmi.ts",[],[],{"ruleId":"167","severity":1,"message":"168","line":63,"column":6,"nodeType":"169","endLine":70,"endColumn":4,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"171","line":103,"column":6,"nodeType":"169","endLine":103,"endColumn":22,"suggestions":"172"},{"ruleId":"167","severity":1,"message":"173","line":107,"column":20,"nodeType":"174","endLine":107,"endColumn":31},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onChange' and 'transactionStatus'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["175"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["176"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [write, prepareStatus, writeStatus, isPrepareLoading, isWriteLoading, isTransactionLoading, onChange, transactionStatus]",{"range":"181","text":"182"},"Update the dependencies array to be: [accountAddress, setValue]",{"range":"183","text":"184"},[1640,1760],"[write, prepareStatus, writeStatus, isPrepareLoading, isWriteLoading, isTransactionLoading, onChange, transactionStatus]",[3019,3035],"[accountAddress, setValue]"]